Download required jar file/library for SendGrid

implementation files('libs/sendgrid-java.jar')

import com.github.sendgrid.SendGrid;

// Called when the user clicks the Send button
    @SuppressWarnings("unchecked")
    public void sendMessage() {
        Hashtable<String, String> params = new Hashtable<String, String>();
        String result = null;

        // Get the values from the form
        EditText editTo = (EditText) findViewById(R.id.email);
        EditText password = (EditText) findViewById(R.id.password);
        EditText fullName = (EditText) findViewById(R.id.name);

        String to = editTo.getText().toString();
        params.put("to", to);

        String from = "";
        params.put("from", from);

        String subject = "";
        params.put("subject", subject);

        String text = "";
        params.put("text", text);

        // Send the Email
        SendEmailWithSendGrid email = new SendEmailWithSendGrid();
        try {
            result = email.execute(params).get();
        } catch (InterruptedException e) {
            // TODO Implement exception handling
            e.printStackTrace();
        } catch (ExecutionException e) {
            // TODO Implement exception handling
            e.printStackTrace();
        }
    }

    private class SendEmailWithSendGrid extends AsyncTask<Hashtable<String, String>, Void, String> {

        @Override
        protected String doInBackground(Hashtable<String, String>... params) {
            Hashtable<String, String> h = params[0];
            UtilsDEFAULT creds = new UtilsDEFAULT();
            SendGrid sendgrid = new SendGrid(creds.getUsername(), creds.getPassword());
            sendgrid.addTo(h.get("to"));
            sendgrid.setFrom(h.get("from"));
            sendgrid.setSubject(h.get("subject"));
            sendgrid.setHtml(h.get("text"));
            //sendgrid.setText(h.get("text"));
            String response = sendgrid.send();
            return response;
        }
    }
